name: Deplyed to preproduction
on: 
 push:
  branches:
    - main


jobs:
  deplyed:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v3
        with:
         fetch-depth: 0
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          
      - run: npm install express
      - run: npm install mongose
      - run: ls -l 
      - run: echo "let s go cwith github Actions"   

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
         aws-access-key-id: ${{ secrets.ID_KEY_ACCESS_AWS2 }}
         aws-secret-access-key: ${{ secrets.KEY_ACCESS_PASS }}
         aws-region: us-east-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
         ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
         ECR_REPOSITORY: 532196928795.dkr.ecr.us-east-1.amazonaws.com/my-ecr-repo
        
         IMAGE_TAG: ${{ github.sha }}
        run: |
         docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
         docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
         echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
         task-definition: task-definition.json
         container-name: my-container
         image: ${{ steps.build-image.outputs.image }}

      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: my-service
          cluster: my-cluster
          wait-for-service-stability: true

      

      
